#include <bits/stdc++.h>
#define ll long long
#define f(i,k,n) for(i=k;i<n;i++)
#define pll pair<ll,ll>
 
#define vll vector<ll>
#define vp vector<pll>
#define vb vector<bool>
 
#define mp map<ll,pll>
#define mll map<ll,ll>
#define mv map<ll,vll>
#define mi mp::iterator
#define um unordered_map<ll,ll>
 
#define M 1000000007
#define MAX 500001
#define NM 998244353
 
using namespace std;
 
ll exp(ll n,ll m){
    if(m==0)
        return 1;
    else if(m==1)
        return n;
    else{
        ll p = exp(n,m/2);
        
        if(m%2==1)
            return (((p*p)%M)*n)%M;
        else
            return (p*p)%M;
    }
}

ll gcd(ll a,ll b){
    if(a==0)
        return b;
        
    return gcd(b%a,a);
}
 
int main(){
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);
    
   ll t,n,k,i,j,x;
   
   cin>>t;
   x=1;
   while(x<=t){
       
    cin>>n;
    
    ll s,e;
    
    vll v(1441,0);
    
    vp a,tmp;
    
    f(i,0,n){
        cin>>s>>e;
        v[s]++;
        v[e]--;
        a.push_back(make_pair(s,e));
        tmp.push_back(make_pair(s,e));
    }
    bool flag = false;
    
    f(i,1,1441){
        v[i]+=v[i-1];
        
        if(v[i] > 2){
            flag = true;
            cout<<"Case #"<<x<<": "<<"IMPOSSIBLE"<<endl;
            break;
        }
    }
    
    if(!flag){
        
        sort(a.begin(),a.end());
        
        map<ll,map<ll,char> > hash;
        map<ll,map<ll,ll> > count;
        
        ll maxc=-1,maxj=-1;
        
        f(i,0,n){
            ll start=a[i].first,end=a[i].second;
            
            if(start >= maxc){
                hash[start][end] = 'C';
                maxc=end;
            }    
            else if(start >= maxj){
                hash[start][end] = 'J';
                maxj=end;
            }
            
            count[start][end]++;
        }
        
        string ans="";
        
        f(i,0,n){
            ll start=tmp[i].first,end=tmp[i].second;
            
            if(count[start][end] > 0){
                
                ans.push_back(hash[start][end]);
                
                if(hash[start][end] == 'C')
                    hash[start][end] = 'J';
                else
                    hash[start][end]='C';
                
                count[start][end]--;
            }
            
            
        }
        
        cout<<"Case #"<<x<<": "<<ans<<endl;
    }
    
    x++;
    
   }
   
   return 0;
   
}
