#include <bits/stdc++.h>
#define ll long long
#define f(i,k,n) for(i=k;i<n;i++)
#define pll pair<ll,ll>
 
#define vll vector<ll>
#define vp vector<pll>
#define vb vector<bool>
 
#define mp map<ll,pll>
#define mll map<ll,ll>
#define mv map<ll,vll>
#define mi mp::iterator
#define um unordered_map<ll,ll>
 
#define M 1000000007
#define MAX 500001
#define NM 998244353
 
using namespace std;
 
ll exp(ll n,ll m){
    if(m==0)
        return 1;
    else if(m==1)
        return n;
    else{
        ll p = exp(n,m/2);
        
        if(m%2==1)
            return (((p*p)%M)*n)%M;
        else
            return (p*p)%M;
    }
}

ll gcd(ll a,ll b){
    if(a==0)
        return b;
        
    return gcd(b%a,a);
}
 
bool isdigit(char a){
    if(a>=48 && a<=57)
        return true;
        
    return false;
}
int main(){
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);
    
   ll t,n,k,i,j,a,b,c,d,x,y,x1,y1,x2,y2;
   
   cin>>t;
   x=1;
   while(x<=t){
       
    string s;
    
    cin>>s;
    
    queue<char> q; 
    
    f(i,0,10){
        ll count = 0;
        string temp = "";
        
        f(j,0,s.length()){
            if(s[j] > i+48){
                q.push(s[j]);
                count++;
            }
            else{
                if(count > 0){
                    
                    temp.push_back('(');
                    
                    while(count>0 && !q.empty()){
                        temp.push_back(q.front());
                        
                        q.pop();
                        count--;
                    }
                    
                    temp.push_back(')');
                }
                
                temp.push_back(s[j]);
                
            }
        }
        if(count > 0){
                    
                    temp.push_back('(');
                    
                    while(count>0 && !q.empty()){
                        temp.push_back(q.front());
                        
                        q.pop();
                        count--;
                    }
                    
                    temp.push_back(')');
        }
        
        s=temp;
    }
      
    cout<<"Case #"<<x<<": "<<s<<endl;
    x++;
   }
       
    return 0; 
    
}